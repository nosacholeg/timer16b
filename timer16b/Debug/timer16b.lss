
timer16b.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000106  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000017a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  0000017a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000017a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000771  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000061c  00000000  00000000  000009d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000313  00000000  00000000  00000ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00001308  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000035e  00000000  00000000  000013ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000009a  00000000  00000000  0000174a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000017e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_7>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 81 00 	jmp	0x102	; 0x102 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
 */ 
#include "timer16b.h"

int main(void)
{
	timer_initialisation();
  7c:	0e 94 4c 00 	call	0x98	; 0x98 <timer_initialisation>
	timer_start();
  80:	0e 94 7d 00 	call	0xfa	; 0xfa <timer_start>
  84:	ff cf       	rjmp	.-2      	; 0x84 <main+0x8>

00000086 <set_mode>:
	timer_value = value;
}
uint16_t get_value()
{
	return timer_value;
}
  86:	01 97       	sbiw	r24, 0x01	; 1
  88:	21 f4       	brne	.+8      	; 0x92 <set_mode+0xc>
  8a:	8e b5       	in	r24, 0x2e	; 46
  8c:	88 60       	ori	r24, 0x08	; 8
  8e:	8e bd       	out	0x2e, r24	; 46
  90:	08 95       	ret
  92:	8e b5       	in	r24, 0x2e	; 46
  94:	8e bd       	out	0x2e, r24	; 46
  96:	08 95       	ret

00000098 <timer_initialisation>:
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	0e 94 43 00 	call	0x86	; 0x86 <set_mode>
  a0:	89 b7       	in	r24, 0x39	; 57
  a2:	80 61       	ori	r24, 0x10	; 16
  a4:	89 bf       	out	0x39, r24	; 57
  a6:	8e e3       	ldi	r24, 0x3E	; 62
  a8:	8b bd       	out	0x2b, r24	; 43
  aa:	80 e8       	ldi	r24, 0x80	; 128
  ac:	8a bd       	out	0x2a, r24	; 42
  ae:	78 94       	sei
  b0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  b4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  b8:	08 95       	ret

000000ba <__vector_7>:
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	2f 93       	push	r18
  c6:	8f 93       	push	r24
  c8:	9f 93       	push	r25
  ca:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  ce:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  d2:	01 96       	adiw	r24, 0x01	; 1
  d4:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  d8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  dc:	88 3e       	cpi	r24, 0xE8	; 232
  de:	93 40       	sbci	r25, 0x03	; 3
  e0:	20 f0       	brcs	.+8      	; 0xea <__vector_7+0x30>
  e2:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  e6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  ea:	9f 91       	pop	r25
  ec:	8f 91       	pop	r24
  ee:	2f 91       	pop	r18
  f0:	0f 90       	pop	r0
  f2:	0f be       	out	0x3f, r0	; 63
  f4:	0f 90       	pop	r0
  f6:	1f 90       	pop	r1
  f8:	18 95       	reti

000000fa <timer_start>:
void timer_start(void)
{
	//starting timer setting no prescaling
	TCCR1B |= (1<<CS10);
  fa:	8e b5       	in	r24, 0x2e	; 46
  fc:	81 60       	ori	r24, 0x01	; 1
  fe:	8e bd       	out	0x2e, r24	; 46
 100:	08 95       	ret

00000102 <_exit>:
 102:	f8 94       	cli

00000104 <__stop_program>:
 104:	ff cf       	rjmp	.-2      	; 0x104 <__stop_program>
